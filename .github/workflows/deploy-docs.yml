
name: Deploy Documentation on Production or Docs Update

on:
  push:
    branches: [ docs ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: production # Checkout the production branch
          fetch-depth: 1  # Shallow fetch only

      - name: Update docs folder from main branch
        uses: WCRP-CMIP/CMIPLD/actions/fetch_branch_path@main
        with:
          branch: 'main'
          path: 'docs/'



      - name: Build and Deploy MkDocs to Production
        uses: WCRP-CMIP/CMIPLD/actions/mkdocs@main
        with:
          source_branch: ${{ github.ref_name }}
          target_branch: 'production'
          config_file: '.src/mkdocs/mkdocs.yml'
          docs_dir: 'docs'

      - name: Deployment notification
        run: |
          echo "## 🚀 Documentation Deployment" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ steps.strategy.outputs.strategy }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Target branch**: \`production\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Deployment completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Access Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Pages**: Available at your configured Pages URL" >> $GITHUB_STEP_SUMMARY
          echo "- **Production branch**: Check \`production\` branch for deployed files" >> $GITHUB_STEP_SUMMARY





